/* Copyright (c) 2009, Code Aurora Forum. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above copyright
 *       notice, this list of conditions and the following disclaimer in the
 *       documentation and/or other materials provided with the distribution.
 *     * Neither the name of Code Aurora nor
 *       the names of its contributors may be used to endorse or promote
 *       products derived from this software without specific prior written
 *       permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
 * NON-INFRINGEMENT ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT OWNER OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

GL_ENTRY(void, glAlphaFunc, GLenum func, GLclampf ref)
GL_ENTRY(void, glClearColor, GLclampf red, GLclampf green, GLclampf blue, GLclampf alpha)
GL_ENTRY(void, glClearDepthf, GLclampf depth)
GL_ENTRY(void, glClipPlanef, GLenum plane, const GLfloat *equation)
GL_ENTRY(void, glColor4f, GLfloat red, GLfloat green, GLfloat blue, GLfloat alpha)
GL_ENTRY(void, glDepthRangef, GLclampf zNear, GLclampf zFar)
GL_ENTRY(void, glFogf, GLenum pname, GLfloat param)
GL_ENTRY(void, glFogfv, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glFrustumf, GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
GL_ENTRY(void, glGetClipPlanef, GLenum pname, GLfloat eqn[4])
GL_ENTRY(void, glGetFloatv, GLenum pname, GLfloat *params)
GL_ENTRY(void, glGetLightfv, GLenum light, GLenum pname, GLfloat *params)
GL_ENTRY(void, glGetMaterialfv, GLenum face, GLenum pname, GLfloat *params)
GL_ENTRY(void, glGetTexEnvfv, GLenum env, GLenum pname, GLfloat *params)
GL_ENTRY(void, glGetTexParameterfv, GLenum target, GLenum pname, GLfloat *params)
GL_ENTRY(void, glLightModelf, GLenum pname, GLfloat param)
GL_ENTRY(void, glLightModelfv, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glLightf, GLenum light, GLenum pname, GLfloat param)
GL_ENTRY(void, glLightfv, GLenum light, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glLineWidth, GLfloat width)
GL_ENTRY(void, glLoadMatrixf, const GLfloat *m)
GL_ENTRY(void, glMaterialf, GLenum face, GLenum pname, GLfloat param)
GL_ENTRY(void, glMaterialfv, GLenum face, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glMultMatrixf, const GLfloat *m)
GL_ENTRY(void, glMultiTexCoord4f, GLenum target, GLfloat s, GLfloat t, GLfloat r, GLfloat q)
GL_ENTRY(void, glNormal3f, GLfloat nx, GLfloat ny, GLfloat nz)
GL_ENTRY(void, glOrthof, GLfloat left, GLfloat right, GLfloat bottom, GLfloat top, GLfloat zNear, GLfloat zFar)
GL_ENTRY(void, glPointParameterf, GLenum pname, GLfloat param)
GL_ENTRY(void, glPointParameterfv, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glPointSize, GLfloat size)
GL_ENTRY(void, glPolygonOffset, GLfloat factor, GLfloat units)
GL_ENTRY(void, glRotatef, GLfloat angle, GLfloat x, GLfloat y, GLfloat z)
GL_ENTRY(void, glScalef, GLfloat x, GLfloat y, GLfloat z)
GL_ENTRY(void, glTexEnvf, GLenum target, GLenum pname, GLfloat param)
GL_ENTRY(void, glTexEnvfv, GLenum target, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glTexParameterf, GLenum target, GLenum pname, GLfloat param)
GL_ENTRY(void, glTexParameterfv, GLenum target, GLenum pname, const GLfloat *params)
GL_ENTRY(void, glTranslatef, GLfloat x, GLfloat y, GLfloat z)
GL_ENTRY(void, glActiveTexture, GLenum texture)
GL_ENTRY(void, glAlphaFuncx, GLenum func, GLclampx ref)
GL_ENTRY(void, glBindBuffer, GLenum target, GLuint buffer)
GL_ENTRY(void, glBindTexture, GLenum target, GLuint texture)
GL_ENTRY(void, glBlendFunc, GLenum sfactor, GLenum dfactor)
GL_ENTRY(void, glBufferData, GLenum target, GLsizeiptr size, const GLvoid *data, GLenum usage)
GL_ENTRY(void, glBufferSubData, GLenum target, GLintptr offset, GLsizeiptr size, const GLvoid *data)
GL_ENTRY(void, glClear, GLbitfield mask)
GL_ENTRY(void, glClearColorx, GLclampx red, GLclampx green, GLclampx blue, GLclampx alpha)
GL_ENTRY(void, glClearDepthx, GLclampx depth)
GL_ENTRY(void, glClearStencil, GLint s)
GL_ENTRY(void, glClientActiveTexture, GLenum texture)
GL_ENTRY(void, glClipPlanex, GLenum plane, const GLfixed *equation)
GL_ENTRY(void, glColor4ub, GLubyte red, GLubyte green, GLubyte blue, GLubyte alpha)
GL_ENTRY(void, glColor4x, GLfixed red, GLfixed green, GLfixed blue, GLfixed alpha)
GL_ENTRY(void, glColorMask, GLboolean red, GLboolean green, GLboolean blue, GLboolean alpha)
GL_ENTRY(void, glColorPointer, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
GL_ENTRY(void, glCompressedTexImage2D, GLenum target, GLint level, GLenum internalformat, GLsizei width, GLsizei height, GLint border, GLsizei imageSize, const GLvoid *data)
GL_ENTRY(void, glCompressedTexSubImage2D, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLsizei imageSize, const GLvoid *data)
GL_ENTRY(void, glCopyTexImage2D, GLenum target, GLint level, GLenum internalformat, GLint x, GLint y, GLsizei width, GLsizei height, GLint border)
GL_ENTRY(void, glCopyTexSubImage2D, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLint x, GLint y, GLsizei width, GLsizei height)
GL_ENTRY(void, glCullFace, GLenum mode)
GL_ENTRY(void, glDeleteBuffers, GLsizei n, const GLuint *buffers)
GL_ENTRY(void, glDeleteTextures, GLsizei n, const GLuint *textures)
GL_ENTRY(void, glDepthFunc, GLenum func)
GL_ENTRY(void, glDepthMask, GLboolean flag)
GL_ENTRY(void, glDepthRangex, GLclampx zNear, GLclampx zFar)
GL_ENTRY(void, glDisable, GLenum cap)
GL_ENTRY(void, glDisableClientState, GLenum array)
GL_ENTRY(void, glDrawArrays, GLenum mode, GLint first, GLsizei count)
GL_ENTRY(void, glDrawElements, GLenum mode, GLsizei count, GLenum type, const GLvoid *indices)
GL_ENTRY(void, glEnable, GLenum cap)
GL_ENTRY(void, glEnableClientState, GLenum array)
GL_ENTRY(void, glFinish, void)
GL_ENTRY(void, glFlush, void)
GL_ENTRY(void, glFogx, GLenum pname, GLfixed param)
GL_ENTRY(void, glFogxv, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glFrontFace, GLenum mode)
GL_ENTRY(void, glFrustumx, GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
GL_ENTRY(void, glGetBooleanv, GLenum pname, GLboolean *params)
GL_ENTRY(void, glGetBufferParameteriv, GLenum target, GLenum pname, GLint *params)
GL_ENTRY(void, glGetClipPlanex, GLenum pname, GLfixed eqn[4])
GL_ENTRY(void, glGenBuffers, GLsizei n, GLuint *buffers)
GL_ENTRY(void, glGenTextures, GLsizei n, GLuint *textures)
GL_ENTRY(GLenum, glGetError, void)
GL_ENTRY(void, glGetFixedv, GLenum pname, GLfixed *params)
GL_ENTRY(void, glGetIntegerv, GLenum pname, GLint *params)
GL_ENTRY(void, glGetLightxv, GLenum light, GLenum pname, GLfixed *params)
GL_ENTRY(void, glGetMaterialxv, GLenum face, GLenum pname, GLfixed *params)
GL_ENTRY(void, glGetPointerv, GLenum pname, void **params)
GL_ENTRY(const GLubyte *, glGetString, GLenum name)
GL_ENTRY(void, glGetTexEnviv, GLenum env, GLenum pname, GLint *params)
GL_ENTRY(void, glGetTexEnvxv, GLenum env, GLenum pname, GLfixed *params)
GL_ENTRY(void, glGetTexParameteriv, GLenum target, GLenum pname, GLint *params)
GL_ENTRY(void, glGetTexParameterxv, GLenum target, GLenum pname, GLfixed *params)
GL_ENTRY(void, glHint, GLenum target, GLenum mode)
GL_ENTRY(GLboolean, glIsBuffer, GLuint buffer)
GL_ENTRY(GLboolean, glIsEnabled, GLenum cap)
GL_ENTRY(GLboolean, glIsTexture, GLuint texture)
GL_ENTRY(void, glLightModelx, GLenum pname, GLfixed param)
GL_ENTRY(void, glLightModelxv, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glLightx, GLenum light, GLenum pname, GLfixed param)
GL_ENTRY(void, glLightxv, GLenum light, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glLineWidthx, GLfixed width)
GL_ENTRY(void, glLoadIdentity, void)
GL_ENTRY(void, glLoadMatrixx, const GLfixed *m)
GL_ENTRY(void, glLogicOp, GLenum opcode)
GL_ENTRY(void, glMaterialx, GLenum face, GLenum pname, GLfixed param)
GL_ENTRY(void, glMaterialxv, GLenum face, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glMatrixMode, GLenum mode)
GL_ENTRY(void, glMultMatrixx, const GLfixed *m)
GL_ENTRY(void, glMultiTexCoord4x, GLenum target, GLfixed s, GLfixed t, GLfixed r, GLfixed q)
GL_ENTRY(void, glNormal3x, GLfixed nx, GLfixed ny, GLfixed nz)
GL_ENTRY(void, glNormalPointer, GLenum type, GLsizei stride, const GLvoid *pointer)
GL_ENTRY(void, glOrthox, GLfixed left, GLfixed right, GLfixed bottom, GLfixed top, GLfixed zNear, GLfixed zFar)
GL_ENTRY(void, glPixelStorei, GLenum pname, GLint param)
GL_ENTRY(void, glPointParameterx, GLenum pname, GLfixed param)
GL_ENTRY(void, glPointParameterxv, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glPointSizex, GLfixed size)
GL_ENTRY(void, glPolygonOffsetx, GLfixed factor, GLfixed units)
GL_ENTRY(void, glPopMatrix, void)
GL_ENTRY(void, glPushMatrix, void)
GL_ENTRY(void, glReadPixels, GLint x, GLint y, GLsizei width, GLsizei height, GLenum format, GLenum type, GLvoid *pixels)
GL_ENTRY(void, glRotatex, GLfixed angle, GLfixed x, GLfixed y, GLfixed z)
GL_ENTRY(void, glSampleCoverage, GLclampf value, GLboolean invert)
GL_ENTRY(void, glSampleCoveragex, GLclampx value, GLboolean invert)
GL_ENTRY(void, glScalex, GLfixed x, GLfixed y, GLfixed z)
GL_ENTRY(void, glScissor, GLint x, GLint y, GLsizei width, GLsizei height)
GL_ENTRY(void, glShadeModel, GLenum mode)
GL_ENTRY(void, glStencilFunc, GLenum func, GLint ref, GLuint mask)
GL_ENTRY(void, glStencilMask, GLuint mask)
GL_ENTRY(void, glStencilOp, GLenum fail, GLenum zfail, GLenum zpass)
GL_ENTRY(void, glTexCoordPointer, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
GL_ENTRY(void, glTexEnvi, GLenum target, GLenum pname, GLint param)
GL_ENTRY(void, glTexEnvx, GLenum target, GLenum pname, GLfixed param)
GL_ENTRY(void, glTexEnviv, GLenum target, GLenum pname, const GLint *params)
GL_ENTRY(void, glTexEnvxv, GLenum target, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glTexImage2D, GLenum target, GLint level, GLint internalformat, GLsizei width, GLsizei height, GLint border, GLenum format, GLenum type, const GLvoid *pixels)
GL_ENTRY(void, glTexParameteri, GLenum target, GLenum pname, GLint param)
GL_ENTRY(void, glTexParameterx, GLenum target, GLenum pname, GLfixed param)
GL_ENTRY(void, glTexParameteriv, GLenum target, GLenum pname, const GLint *params)
GL_ENTRY(void, glTexParameterxv, GLenum target, GLenum pname, const GLfixed *params)
GL_ENTRY(void, glTexSubImage2D, GLenum target, GLint level, GLint xoffset, GLint yoffset, GLsizei width, GLsizei height, GLenum format, GLenum type, const GLvoid *pixels)
GL_ENTRY(void, glTranslatex, GLfixed x, GLfixed y, GLfixed z)
GL_ENTRY(void, glVertexPointer, GLint size, GLenum type, GLsizei stride, const GLvoid *pointer)
GL_ENTRY(void, glViewport, GLint x, GLint y, GLsizei width, GLsizei height)
GL_ENTRY(void, glPointSizePointerOES, GLenum type, GLsizei stride, const GLvoid *pointer)

// 2.0 additions
GL_ENTRY(void,           glAttachShader , GLuint , GLuint )
GL_ENTRY(void,           glBindAttribLocation , GLuint , GLuint , const char* )
GL_ENTRY(void,           glBindFramebuffer , GLenum , GLuint )
GL_ENTRY(void,           glBindRenderbuffer , GLenum , GLuint )
GL_ENTRY(void,           glBlendColor , GLclampf , GLclampf , GLclampf , GLclampf )
GL_ENTRY(void,           glBlendEquation , GLenum)
GL_ENTRY(void,           glBlendEquationSeparate , GLenum , GLenum )
GL_ENTRY(void,           glBlendFuncSeparate , GLenum , GLenum , GLenum , GLenum )
GL_ENTRY(GLenum,         glCheckFramebufferStatus , GLenum )
GL_ENTRY(void,           glCompileShader , GLuint )
GL_ENTRY(GLuint,         glCreateProgram, void)
GL_ENTRY(GLuint,         glCreateShader , GLenum )
GL_ENTRY(void,           glDeleteFramebuffers , GLsizei , const GLuint* )
GL_ENTRY(void,           glDeleteProgram , GLuint)
GL_ENTRY(void,           glDeleteRenderbuffers , GLsizei , const GLuint* )
GL_ENTRY(void,           glDeleteShader , GLuint )
GL_ENTRY(void,           glDetachShader , GLuint , GLuint )
GL_ENTRY(void,           glDisableVertexAttribArray , GLuint )
GL_ENTRY(void,           glEnableVertexAttribArray , GLuint )
GL_ENTRY(void,           glFramebufferRenderbuffer , GLenum , GLenum , GLenum , GLuint )
GL_ENTRY(void,           glFramebufferTexture2D , GLenum , GLenum , GLenum , GLuint , GLint )
GL_ENTRY(void,           glGenerateMipmap , GLenum )
GL_ENTRY(void,           glGenFramebuffers , GLsizei , GLuint* )
GL_ENTRY(void,           glGenRenderbuffers , GLsizei , GLuint* )
GL_ENTRY(void,           glGetActiveAttrib , GLuint , GLuint , GLsizei , GLsizei* , GLint* , GLenum* , char* )
GL_ENTRY(void,           glGetActiveUniform , GLuint , GLuint , GLsizei , GLsizei* , GLint* , GLenum* , char* )
GL_ENTRY(void,           glGetAttachedShaders , GLuint , GLsizei , GLsizei* , GLuint* s)
GL_ENTRY(int,            glGetAttribLocation , GLuint , const char* )
GL_ENTRY(void,           glGetFramebufferAttachmentParameteriv , GLenum t, GLenum , GLenum , GLint* )
GL_ENTRY(void,           glGetProgramiv , GLuint , GLenum , GLint* )
GL_ENTRY(void,           glGetProgramInfoLog , GLuint , GLsizei , GLsizei* , char* )
GL_ENTRY(void,           glGetRenderbufferParameteriv , GLenum , GLenum , GLint* )
GL_ENTRY(void,           glGetShaderiv , GLuint , GLenum , GLint* )
GL_ENTRY(void,           glGetShaderInfoLog , GLuint , GLsizei , GLsizei* , char* )
GL_ENTRY(void,           glGetShaderPrecisionFormat , GLenum , GLenum , GLint* , GLint* )
GL_ENTRY(void,           glGetShaderSource , GLuint , GLsizei , GLsizei* , char* )
GL_ENTRY(void,           glGetUniformfv , GLuint , GLint , GLfloat* )
GL_ENTRY(void,           glGetUniformiv , GLuint , GLint , GLint* )
GL_ENTRY(int,            glGetUniformLocation , GLuint , const char* )
GL_ENTRY(void,           glGetVertexAttribfv , GLuint , GLenum , GLfloat* )
GL_ENTRY(void,           glGetVertexAttribiv , GLuint , GLenum , GLint* )
GL_ENTRY(void,           glGetVertexAttribPointerv , GLuint , GLenum , void** )
GL_ENTRY(GLboolean,      glIsFramebuffer , GLuint )
GL_ENTRY(GLboolean,      glIsProgram , GLuint )
GL_ENTRY(GLboolean,      glIsRenderbuffer , GLuint )
GL_ENTRY(GLboolean,      glIsShader , GLuint )
GL_ENTRY(void,           glLinkProgram , GLuint )
GL_ENTRY(void,           glReleaseShaderCompiler, void)
GL_ENTRY(void,           glRenderbufferStorage , GLenum , GLenum , GLsizei , GLsizei )
GL_ENTRY(void,           glShaderBinary , GLsizei , const GLuint* , GLenum , const void* , GLsizei )
GL_ENTRY(void,           glShaderSource , GLuint , GLsizei , const char** , const GLint* )
GL_ENTRY(void,           glStencilFuncSeparate , GLenum , GLenum , GLint , GLuint )
GL_ENTRY(void,           glStencilMaskSeparate , GLenum , GLuint )
GL_ENTRY(void,           glStencilOpSeparate , GLenum , GLenum , GLenum , GLenum )
GL_ENTRY(void,           glUniform1f , GLint , GLfloat )
GL_ENTRY(void,           glUniform1fv , GLint , GLsizei , const GLfloat* )
GL_ENTRY(void,           glUniform1i , GLint , GLint )
GL_ENTRY(void,           glUniform1iv , GLint , GLsizei , const GLint* )
GL_ENTRY(void,           glUniform2f , GLint , GLfloat , GLfloat )
GL_ENTRY(void,           glUniform2fv , GLint , GLsizei , const GLfloat* )
GL_ENTRY(void,           glUniform2i , GLint , GLint , GLint )
GL_ENTRY(void,           glUniform2iv , GLint , GLsizei , const GLint* )
GL_ENTRY(void,           glUniform3f , GLint , GLfloat, GLfloat , GLfloat )
GL_ENTRY(void,           glUniform3fv , GLint , GLsizei , const GLfloat* )
GL_ENTRY(void,           glUniform3i , GLint , GLint , GLint , GLint )
GL_ENTRY(void,           glUniform3iv , GLint , GLsizei , const GLint* )
GL_ENTRY(void,           glUniform4f , GLint , GLfloat , GLfloat , GLfloat , GLfloat )
GL_ENTRY(void,           glUniform4fv , GLint , GLsizei  , const GLfloat* )
GL_ENTRY(void,           glUniform4i , GLint , GLint , GLint , GLint , GLint )
GL_ENTRY(void,           glUniform4iv , GLint , GLsizei , const GLint* )
GL_ENTRY(void,           glUniformMatrix2fv , GLint , GLsizei , GLboolean , const GLfloat* )
GL_ENTRY(void,           glUniformMatrix3fv , GLint , GLsizei , GLboolean , const GLfloat* )
GL_ENTRY(void,           glUniformMatrix4fv , GLint , GLsizei , GLboolean , const GLfloat* )
GL_ENTRY(void,           glUseProgram , GLuint )
GL_ENTRY(void,           glValidateProgram , GLuint )
GL_ENTRY(void,           glVertexAttrib1f , GLuint , GLfloat )
GL_ENTRY(void,           glVertexAttrib1fv , GLuint , const GLfloat* )
GL_ENTRY(void,           glVertexAttrib2f , GLuint , GLfloat , GLfloat )
GL_ENTRY(void,           glVertexAttrib2fv , GLuint , const GLfloat* )
GL_ENTRY(void,           glVertexAttrib3f , GLuint , GLfloat , GLfloat , GLfloat )
GL_ENTRY(void,           glVertexAttrib3fv , GLuint , const GLfloat* )
GL_ENTRY(void,           glVertexAttrib4f , GLuint , GLfloat , GLfloat y, GLfloat , GLfloat )
GL_ENTRY(void,           glVertexAttrib4fv , GLuint , const GLfloat* )
GL_ENTRY(void,           glVertexAttribPointer , GLuint , GLint , GLenum , GLboolean , GLsizei , const void* )

// 2.0 extensions
GL_ENTRY(void,           glProgramBinaryOES, GLuint, GLenum, const void *, GLint)
